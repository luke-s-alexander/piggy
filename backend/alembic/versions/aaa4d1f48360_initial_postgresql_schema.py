"""Initial PostgreSQL schema

Revision ID: aaa4d1f48360
Revises: 
Create Date: 2025-09-07 13:44:21.292675

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'aaa4d1f48360'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account_types',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('sub_category', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('categories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('color', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('accounts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('account_type_id', sa.UUID(), nullable=False),
    sa.Column('balance', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('institution', sa.String(), nullable=True),
    sa.Column('account_number', sa.String(), nullable=True),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['account_type_id'], ['account_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_account_active', 'accounts', ['is_active'], unique=False)
    op.create_index('idx_account_name', 'accounts', ['name'], unique=False)
    op.create_index('idx_account_type', 'accounts', ['account_type_id'], unique=False)
    op.create_table('balance_history',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('account_id', sa.UUID(), nullable=False),
    sa.Column('previous_balance', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('new_balance', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('change_amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('change_reason', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transactions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('account_id', sa.UUID(), nullable=False),
    sa.Column('category_id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('transaction_date', sa.Date(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('ai_category_id', sa.UUID(), nullable=True),
    sa.Column('ai_confidence', sa.Float(), nullable=True),
    sa.Column('is_ai_categorized', sa.Boolean(), nullable=False),
    sa.Column('user_corrected', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['ai_category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_transaction_account_date', 'transactions', ['account_id', 'transaction_date'], unique=False)
    op.create_index('idx_transaction_category', 'transactions', ['category_id'], unique=False)
    op.create_index('idx_transaction_date', 'transactions', ['transaction_date'], unique=False)
    op.create_index('idx_transaction_type', 'transactions', ['type'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_transaction_type', table_name='transactions')
    op.drop_index('idx_transaction_date', table_name='transactions')
    op.drop_index('idx_transaction_category', table_name='transactions')
    op.drop_index('idx_transaction_account_date', table_name='transactions')
    op.drop_table('transactions')
    op.drop_table('balance_history')
    op.drop_index('idx_account_type', table_name='accounts')
    op.drop_index('idx_account_name', table_name='accounts')
    op.drop_index('idx_account_active', table_name='accounts')
    op.drop_table('accounts')
    op.drop_table('categories')
    op.drop_table('account_types')
    # ### end Alembic commands ###